

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Apr 07 18:18:19 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F84A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x4E,2
    12  0000                     
    13                           ; Version 2.20
    14                           ; Generated 12/02/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F84A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  0081                     	;# 
    59  0085                     	;# 
    60  0086                     	;# 
    61  0088                     	;# 
    62  0089                     	;# 
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  0081                     	;# 
    75  0085                     	;# 
    76  0086                     	;# 
    77  0088                     	;# 
    78  0089                     	;# 
    79                           
    80                           	psect	idataBANK0
    81  038A                     __pidataBANK0:
    82                           
    83                           ;initializer for _array
    84  038A  343F               	retlw	63
    85  038B  3400               	retlw	0
    86  038C  3406               	retlw	6
    87  038D  3400               	retlw	0
    88  038E  345B               	retlw	91
    89  038F  3400               	retlw	0
    90  0390  344F               	retlw	79
    91  0391  3400               	retlw	0
    92  0392  3466               	retlw	102
    93  0393  3400               	retlw	0
    94  0394  346D               	retlw	109
    95  0395  3400               	retlw	0
    96  0396  347C               	retlw	124
    97  0397  3400               	retlw	0
    98  0398  3407               	retlw	7
    99  0399  3400               	retlw	0
   100  039A  347F               	retlw	127
   101  039B  3400               	retlw	0
   102  039C  346F               	retlw	111
   103  039D  3400               	retlw	0
   104                           
   105                           	psect	nvBANK0
   106  0023                     __pnvBANK0:
   107  0023                     _i:
   108  0023                     	ds	2
   109  0005                     _PORTA	set	5
   110  0006                     _PORTB	set	6
   111  0085                     _TRISA	set	133
   112  0086                     _TRISB	set	134
   113                           
   114                           	psect	cinit
   115  03D6                     start_initialization:	
   116                           ; #config settings
   117                           
   118  03D6                     __initialization:
   119                           
   120                           ; Initialize objects allocated to BANK0
   121  03D6  238A               	fcall	__pidataBANK0	;fetch initializer
   122  03D7  008C               	movwf	__pdataBANK0& (0+127)
   123  03D8  238B               	fcall	__pidataBANK0+1	;fetch initializer
   124  03D9  008D               	movwf	(__pdataBANK0+1)& (0+127)
   125  03DA  238C               	fcall	__pidataBANK0+2	;fetch initializer
   126  03DB  008E               	movwf	(__pdataBANK0+2)& (0+127)
   127  03DC  238D               	fcall	__pidataBANK0+3	;fetch initializer
   128  03DD  008F               	movwf	(__pdataBANK0+3)& (0+127)
   129  03DE  238E               	fcall	__pidataBANK0+4	;fetch initializer
   130  03DF  0090               	movwf	(__pdataBANK0+4)& (0+127)
   131  03E0  238F               	fcall	__pidataBANK0+5	;fetch initializer
   132  03E1  0091               	movwf	(__pdataBANK0+5)& (0+127)
   133  03E2  2390               	fcall	__pidataBANK0+6	;fetch initializer
   134  03E3  0092               	movwf	(__pdataBANK0+6)& (0+127)
   135  03E4  2391               	fcall	__pidataBANK0+7	;fetch initializer
   136  03E5  0093               	movwf	(__pdataBANK0+7)& (0+127)
   137  03E6  2392               	fcall	__pidataBANK0+8	;fetch initializer
   138  03E7  0094               	movwf	(__pdataBANK0+8)& (0+127)
   139  03E8  2393               	fcall	__pidataBANK0+9	;fetch initializer
   140  03E9  0095               	movwf	(__pdataBANK0+9)& (0+127)
   141  03EA  2394               	fcall	__pidataBANK0+10	;fetch initializer
   142  03EB  0096               	movwf	(__pdataBANK0+10)& (0+127)
   143  03EC  2395               	fcall	__pidataBANK0+11	;fetch initializer
   144  03ED  0097               	movwf	(__pdataBANK0+11)& (0+127)
   145  03EE  2396               	fcall	__pidataBANK0+12	;fetch initializer
   146  03EF  0098               	movwf	(__pdataBANK0+12)& (0+127)
   147  03F0  2397               	fcall	__pidataBANK0+13	;fetch initializer
   148  03F1  0099               	movwf	(__pdataBANK0+13)& (0+127)
   149  03F2  2398               	fcall	__pidataBANK0+14	;fetch initializer
   150  03F3  009A               	movwf	(__pdataBANK0+14)& (0+127)
   151  03F4  2399               	fcall	__pidataBANK0+15	;fetch initializer
   152  03F5  009B               	movwf	(__pdataBANK0+15)& (0+127)
   153  03F6  239A               	fcall	__pidataBANK0+16	;fetch initializer
   154  03F7  009C               	movwf	(__pdataBANK0+16)& (0+127)
   155  03F8  239B               	fcall	__pidataBANK0+17	;fetch initializer
   156  03F9  009D               	movwf	(__pdataBANK0+17)& (0+127)
   157  03FA  239C               	fcall	__pidataBANK0+18	;fetch initializer
   158  03FB  009E               	movwf	(__pdataBANK0+18)& (0+127)
   159  03FC  239D               	fcall	__pidataBANK0+19	;fetch initializer
   160  03FD  009F               	movwf	(__pdataBANK0+19)& (0+127)
   161  03FE                     end_of_initialization:	
   162                           ;End of C runtime variable initialization code
   163                           
   164  03FE                     __end_of__initialization:
   165  03FE  0183               	clrf	3
   166  03FF  2B9E               	ljmp	_main	;jump to C main() function
   167                           
   168                           	psect	dataBANK0
   169  000C                     __pdataBANK0:
   170  000C                     _array:
   171  000C                     	ds	20
   172                           
   173                           	psect	cstackBANK0
   174  0020                     __pcstackBANK0:
   175  0020                     ?_main:
   176  0020                     ??_main:	
   177                           ; 1 bytes @ 0x0
   178                           
   179                           
   180                           ; 1 bytes @ 0x0
   181  0020                     	ds	3
   182                           
   183                           	psect	maintext
   184  039E                     __pmaintext:	
   185 ;;
   186 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   187 ;;
   188 ;; *************** function _main *****************
   189 ;; Defined at:
   190 ;;		line 23 in file "newmain.c"
   191 ;; Parameters:    Size  Location     Type
   192 ;;		None
   193 ;; Auto vars:     Size  Location     Type
   194 ;;		None
   195 ;; Return value:  Size  Location     Type
   196 ;;                  1    wreg      void 
   197 ;; Registers used:
   198 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   199 ;; Tracked objects:
   200 ;;		On entry : B00/0
   201 ;;		On exit  : 0/0
   202 ;;		Unchanged: 0/0
   203 ;; Data sizes:     COMMON   BANK0
   204 ;;      Params:         0       0
   205 ;;      Locals:         0       0
   206 ;;      Temps:          0       3
   207 ;;      Totals:         0       3
   208 ;;Total ram usage:        3 bytes
   209 ;; This function calls:
   210 ;;		Nothing
   211 ;; This function is called by:
   212 ;;		Startup code after reset
   213 ;; This function uses a non-reentrant model
   214 ;;
   215                           
   216                           
   217                           ;psect for function _main
   218  039E                     _main:
   219  039E                     l634:	
   220                           ;incstack = 0
   221                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1]
   222                           
   223                           
   224                           ;newmain.c: 25:     TRISB = 0;
   225  039E  1683               	bsf	3,5	;RP0=1, select bank1
   226  039F  0186               	clrf	6	;volatile
   227                           
   228                           ;newmain.c: 26:     PORTB = 0;
   229  03A0  1283               	bcf	3,5	;RP0=0, select bank0
   230  03A1  0186               	clrf	6	;volatile
   231                           
   232                           ;newmain.c: 27:     TRISA = 0;
   233  03A2  1683               	bsf	3,5	;RP0=1, select bank1
   234  03A3  0185               	clrf	5	;volatile
   235  03A4                     l636:
   236                           
   237                           ;newmain.c: 28:     PORTA = 0x01;
   238  03A4  3001               	movlw	1
   239  03A5  1283               	bcf	3,5	;RP0=0, select bank0
   240  03A6  0085               	movwf	5	;volatile
   241  03A7                     l638:
   242                           
   243                           ;newmain.c: 32:         for (i = 0; i < 10; i++) {
   244  03A7  1283               	bcf	3,5	;RP0=0, select bank0
   245  03A8  01A3               	clrf	_i
   246  03A9  01A4               	clrf	_i+1
   247  03AA                     l644:
   248                           
   249                           ;newmain.c: 33:             PORTB = array[i];
   250  03AA  1283               	bcf	3,5	;RP0=0, select bank0
   251  03AB  0823               	movf	_i,w
   252  03AC  00A0               	movwf	??_main
   253  03AD  0720               	addwf	??_main,w
   254  03AE  3E0C               	addlw	(low (_array| 0))& (0+255)
   255  03AF  0084               	movwf	4
   256  03B0  1383               	bcf	3,7	;select IRP bank0
   257  03B1  0800               	movf	0,w
   258  03B2  0086               	movwf	6	;volatile
   259  03B3                     l646:
   260                           
   261                           ;newmain.c: 34:             _delay((unsigned long)((500)*(4000000/4000.0)));
   262  03B3  3003               	movlw	3
   263  03B4  00A2               	movwf	??_main+2
   264  03B5  308A               	movlw	138
   265  03B6  00A1               	movwf	??_main+1
   266  03B7  3055               	movlw	85
   267  03B8  00A0               	movwf	??_main
   268  03B9                     u37:
   269  03B9  0BA0               	decfsz	??_main,f
   270  03BA  2BB9               	goto	u37
   271  03BB  0BA1               	decfsz	??_main+1,f
   272  03BC  2BB9               	goto	u37
   273  03BD  0BA2               	decfsz	??_main+2,f
   274  03BE  2BB9               	goto	u37
   275  03BF  2BC0               	nop2
   276  03C0                     l648:
   277                           
   278                           ;newmain.c: 35:         }
   279  03C0  3001               	movlw	1
   280  03C1  1283               	bcf	3,5	;RP0=0, select bank0
   281  03C2  07A3               	addwf	_i,f
   282  03C3  1803               	skipnc
   283  03C4  0AA4               	incf	_i+1,f
   284  03C5  3000               	movlw	0
   285  03C6  07A4               	addwf	_i+1,f
   286  03C7                     l650:
   287  03C7  0824               	movf	_i+1,w
   288  03C8  3A80               	xorlw	128
   289  03C9  00CF               	movwf	btemp+1
   290  03CA  3080               	movlw	128
   291  03CB  024F               	subwf	btemp+1,w
   292  03CC  1D03               	skipz
   293  03CD  2BD0               	goto	u25
   294  03CE  300A               	movlw	10
   295  03CF  0223               	subwf	_i,w
   296  03D0                     u25:
   297  03D0  1C03               	skipc
   298  03D1  2BD3               	goto	u21
   299  03D2  2BD4               	goto	u20
   300  03D3                     u21:
   301  03D3  2BAA               	goto	l644
   302  03D4                     u20:
   303  03D4  2BA7               	goto	l638
   304  03D5  2800               	ljmp	start
   305  03D6                     __end_of_main:
   306  004E                     btemp	set	78	;btemp
   307  004E                     wtemp0	set	78
   308                           
   309                           	psect	config
   310                           
   311                           ;Config register CONFIG @ 0x2007
   312                           ;	Oscillator Selection bits
   313                           ;	FOSC = EXTRC, RC oscillator
   314                           ;	Watchdog Timer
   315                           ;	WDTE = OFF, WDT disabled
   316                           ;	Power-up Timer Enable bit
   317                           ;	PWRTE = OFF, Power-up Timer is disabled
   318                           ;	Code Protection bit
   319                           ;	CP = OFF, Code protection disabled
   320  2007                     	org	8199
   321  2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66      3      25

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               42      3      19       3       37.9%
BITBANK0            42      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      19       6        0.0%
ABS                  0      0      19       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              40      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Apr 07 18:18:19 2021

                      _i 0023                       u20 03D4                       u21 03D3  
                     u25 03D0                       u37 03B9                      l650 03C7  
                    l634 039E                      l644 03AA                      l636 03A4  
                    l646 03B3                      l638 03A7                      l648 03C0  
                    fsr0 0004                      indf 0000                     _main 039E  
                   btemp 004E                     start 0000                    ?_main 0020  
                  _PORTA 0005                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086                    _array 000C                    status 0003  
                  wtemp0 004E          __initialization 03D6             __end_of_main 03D6  
                 ??_main 0020  __end_of__initialization 03FE             __pidataBANK0 038A  
             __pmaintext 039E     end_of_initialization 03FE      start_initialization 03D6  
            __pdataBANK0 000C                ___latbits 0000            __pcstackBANK0 0020  
              __pnvBANK0 0023            __size_of_main 0038  
